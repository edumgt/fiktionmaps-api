plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.flywaydb.flyway' version '7.5.4'
}

group = 'com.fiktionmaps'
version = '0.0.1-SNAPSHOT'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.0', 'io.jsonwebtoken:jjwt-jackson:0.12.0'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

}

/*ext.flywayProps = new Properties()
flywayProps.load(new FileInputStream(this.projectDir.absolutePath + "/src/main/resources/application.properties"))

flyway {
	url = flywayProps['spring.datasource.url']
	user = flywayProps['spring.datasource.username']
	password = flywayProps['spring.datasource.password']
	locations = ['filesystem:src/main/resources/db/migration']
	baselineOnMigrate = true
}*/

tasks.named('test') {
	useJUnitPlatform()
}
